# Configuration file for SwiftStack Controller
#
# This file is sourced by Bash and config items are shell variables.  This
# means previously-defined variables may be referenced in later ones per shell
# syntax (be sure to quote values which include a space).

CONTROLLER_ORGANIZATION="PayPal"

# Define the server hostname which will be running the controller
# This should be the fully-qualified domain name of the controller (or
# cluster's main node, if clustered).  It should have a DNS entry and match the
# SSL certificate: /opt/ss/etc/ssman.crt
PRIMARY_CONTROLLER_HOSTNAME="<%= @fqdn %>"

# Username for the privileged SwiftStack role account on the Controller host.
# *** This account will have sudo privileges. ***
SS_USER=swiftstack

# Estimated number of Swift nodes that this controller will manage
# (helps to estimate required storage space for logs/metrics)
ESTIMATED_NODE_COUNT=3

# OpenVPN setup
OPENVPN_GATEWAY="$PRIMARY_CONTROLLER_HOSTNAME"
# Arbitrary point in the 10.0.0.0/8 space which is unlikely to be used
# (and 123 is the octal representation of 'S').
OPENVPN_SUBNET=10.123.0.0
OPENVPN_NETMASK=255.255.0.0
# For legal 2-letter OPENVPN_COUNTRY codes, see
# http://en.wikipedia.org/wiki/ISO_3166-1
OPENVPN_COUNTRY="US"
OPENVPN_PROVINCE="CA"
OPENVPN_CITY="SanJose"
OPENVPN_ORGANIZATION="PayPal"
OPENVPN_EMAIL="foo"

# These values will be initially generated with a fair amount of randomness,
# but you may want more cryptographically secure values.  (Initial generation
# is '(date; ps aux) | md5sum' -- sha256sum would be better, but md5sum exists
# on all our supported platforms.)
#
# Make these values unique, and don't share them with anybody:
CONTROLLER_SECRET_KEY=0262436528703a5e1334b9a093c62f1c
CONTROLLER_SIGNUP_API_SECRET=f2b16237f98d6ea2ed923dc08e5dee80

# Should the SwiftStack controller manage its firewall settings?
# Only possible on Ubuntu (on CentOS, this should always be set to "false").
# The value must be "true" or "false".
MANAGE_FIREWALL=true

# Backup Configuration:
# Generate a backup every this-many hours (between 1 and 24; defaults to 6).
BACKUP_PERIOD_HOURS=6
# Synchronize metrics every this-many minutes (>=5; defaults to 5).
METRICS_SYNC_PERIOD_MINUTES=5

# Path where backups will be stored on local filesystem.  This only makes sense
# if you have some external system which pulls files from there to some other
# durable storage.
BACKUP_LOCAL_PATH=/var/lib/ss-backup

# Number of days' worth of local backups to keep (>= 1; defaults to 4)
BACKUP_LOCAL_RETENTION_DAYS=4

# Set BACKUP_SWIFT_ENABLED to anything to enable sending backups into a Swift
# cluster (including CloudFiles, if desired).
#BACKUP_SWIFT_ENABLED=

# The Auth URL to connect to, and credentials to use, if BACKUP_SWIFT_ENABLED
# If not specified, will use Rackspace Cloud Files
#BACKUP_SWIFT_AUTHURL=
#BACKUP_SWIFT_ACCOUNT=
#BACKUP_SWIFT_API_KEY=

# Use Rackspace "servicenet" (ONLY for Cloud Files when this is a Rackspace Cloud server)
#BACKUP_SWIFT_USE_SERVICENET=

# Number of days' worth of local backups to keep (>= 1; defaults to 14)
BACKUP_SWIFT_RETENTION_DAYS=14

# If a KEYRING and GPG key NAME are given here, Swift backups will be encrypted
# with the specified public GPG key.  The corresponding private key will be
# required when restoring backups (obviously).
#BACKUP_SWIFT_ENCRYPTION_KEYRING=
#BACKUP_SWIFT_ENCRYPTION_NAME=

# LDAP Configuration for Controller auth (NOT Swift auth):
#CONTROLLER_LDAP_ENDPOINT=
#CONTROLLER_LDAP_BIND_DN=  (leave blank for anonymous binding)
#CONTROLLER_LDAP_BIND_DN_PASSWORD=  (leave blank for anonymous binding)
#CONTROLLER_LDAP_GROUP_DN=
## this can be either 'posixGroup' or 'groupOfNames'
#CONTROLLER_LDAP_GROUP_OBJECT_CLASS=
# the username that a user logs in to the controller as gets interpolated
# into the template below, where you put the '%s'
#CONTROLLER_LDAP_USER_DN_TEMPLATE='cn=%s,ou=people,dc=example,dc=com'
#CONTROLLER_LDAP_ROLE_TIMEOUT=600
#CONTROLLER_LDAP_CONTROLLERUSER_GROUP_NAME=ControllerUser
#CONTROLLER_LDAP_CONTROLLERADMINISTRATOR_GROUP_NAME=ControllerAdministrator
#CONTROLLER_LDAP_CLUSTEROPERATOR_GROUP_NAME=ClusterOperator
#CONTROLLER_LDAP_CLUSTERACCOUNTMANAGER_GROUP_NAME=ClusterAccountManager

# Email configuration
CONTROLLER_EMAIL_HOST='YOUR SMTP SERVER HERE'
CONTROLLER_EMAIL_PORT=587
CONTROLLER_EMAIL_HOST_USER='YOUR SENDING EMAIL ADDRESS HERE'
CONTROLLER_EMAIL_HOST_PASSWORD='YOUR EMAIL PASSWORD HERE'
CONTROLLER_EMAIL_USE_TLS=True


# Set this to any valid syslog facility (without "LOG_" prepended) in order
#   to use syslog to log events.
# Reference: http://www.gnu.org/software/libc/manual/html_node/syslog_003b-vsyslog.html#syslog_003b-vsyslog
#
#CONTROLLER_SYSLOG_FACILITY=LOCAL3

CONTROLLER_AUDIT_LOGGING_LEVEL="INFO"

# Events may be sent as SNMPv2 TRAPs
#CONTROLLER_SNMP_TRAP_TARGET_HOST=  (hostname or IPv4 address)
#CONTROLLER_SNMP_TRAP_TARGET_PORT=  (defaults to 162)
#CONTROLLER_SNMP_TRAP_COMMUNITY=    (SNMPv2 community string defaults to "public")



# Controller operational settings
CONTROLLER_WORKER_COUNT=8
CONTROLLER_GUNICORN_COUNT=16
# Size of memcached on controller (units are MiB and 64 is the normal default)
CONTROLLER_MEMCACHED_SIZE=64
# Language code for this installation. All choices can be found here:
# http://www.i18nguy.com/unicode/language-identifiers.html
CONTROLLER_LANGUAGE_CODE='en-us'


# Set these values if installing the SwiftStack Controller behind a proxy
# http_proxy=http://PROXY.HOSTNAME.HERE:3128
# https_proxy=http://PROXY.HOSTNAME.HERE:3128

# How many graphite webapp workers to run (either on the single controller
# or on each graphite node in a clustered controller).
GRAPHITE_WORKERS=5

# The number of carbon cache updates per second
# before write-batching takes effect (good rule-of-thumb would be between
# 50% and 100% of your estimated maximum RANDOM write IOPS for your disk
# subsystem)
# This setting applies to single-server and clustered controllers.
GRAPHITE_CACHE_UPDATES_PER_SECOND=100

##############################################################################
###                   -- Clustered Controllers ONLY --                     ###

# For clustered controllers, a space-sep list of graphite server hostnames.
# For single-server controllers, leave this commented out or blank.
#GRAPHITE_HOSTNAMES=""

# For clustered controllers, a space-sep list of graphite backend
# IP:PORT combinations which the graphite nodes will use to talk to each
# other (probably back-net IP addresses instead of the servers' main IPs).
#GRAPHITE_BACKENDS=

# For clustered controllers, size for graphite server memcached
#GRAPHITE_MEMCACHED_SIZE=1024

# For clustered controllers: arbitrary firewall rules for each graphite node.
# This must be a valid fragment of JSON (a dictionary body).
#GRAPHITE_FIREWALL_RULES=

# For clustered controllers, space-separated list of carbon cache
# "destinations" (IP:PORT:LABEL)
#GRAPHITE_CACHE_DESTINATIONS=

# For clustered controllers, this is the space-separated list of IP:PORT
# combinations of Graphite webapps running on the GRAPHITE_HOSTNAMES servers.
# If the ssman talks to the graphite servers over a VPN, you'd use their client
# VPN IPs here.
#SSMAN_GRAPHITES=

# For clustered controllers, this is the space-separated list of IP:PORT:LABEL
# combinations of carbon relays running on the GRAPHITE_HOSTNAMES servers.
# If the ssman talks to the graphite servers over a VPN, you'd use their
# client VPN IPs here.
#CARBON_RELAY_DESTINATIONS=

# For clustered controllers, a graphite data backup server "local" to the
# servers defined in GRAPHITE_HOSTNAMES.  This is optional, and leave it
# commented out or blank for single-server controllers.
#NEAR_BACKUP_HOSTNAME=
# The hostname or IP to which whisper files should be backed up (more likely
# to be the IP of a back-net interface than the same as $NEAR_BACKUP_HOSTNAME)
#NEAR_BACKUP_TARGET=

# Optional OpenVPN route to add (clustered controllers only, whose graphite
# servers need to connect back to the primary ssman over OpenVPN).
#OPENVPN_ROUTE_NETWORK=
#OPENVPN_ROUTE_NETMASK=

# This is just a serialization of node['openvpn']['client_configurations']
# as comma-separated, space-separated three-tuples of
# <graphite_hostname> <server_tunnel_ip> <client_tunnel_ip>
# (Only relevant to clustered controllers)
#OPENVPN_CLIENT_CONFIGS=

